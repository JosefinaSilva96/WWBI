library(haven)
library(dplyr)
library(tidyr)
library(stringr)
library(labelled)
library(data.table)
library(ggplot2)
library(shinydashboard)
library(shiny)
library(shinythemes)
library(DT)
library(maps)
library(mapdata)
library(leaflet)
library(rnaturalearth)
library(sf)
library(plotly)
library(officer)
library(flextable)
library(viridis)
library(here)
library(glue)
library(colourpicker)
library(wbstats)
library(htmlwidgets)
library(bs4Dash)
library(countrycode)
library(bslib)
rsconnect::showLogs()
rsconnect::showLogs()
rsconnect::showLogs()
rsconnect::removeApplication("02-shiny-dashboard")
rsconnect::deployApp(appName = "02-shiny-dashboard")
rsconnect::deployApp("C:/WBG/GitHub/WWBI/ShinyApp/")
rlang::last_trace()
rsconnect::deployApp("C:/WBG/GitHub/WWBI/ShinyApp/")
file.exists("_quarto.yml")
unlink("_quarto.yml")
install.packages("quarto")
quarto::quarto_install()
setwd("C:/WBG/GitHub/WWBI/ShinyApp/")
quarto::quarto_path()
file.exists("_quarto.yml")
rsconnect::deployApp(appDir = "C:/WBG/GitHub/WWBI/ShinyApp/", forceUpdate = TRUE)
Sys.setenv(QUARTO_PUBLISH = "none")
rsconnect::deployApp(appDir = "C:/WBG/GitHub/WWBI/ShinyApp/", forceUpdate = TRUE)
Sys.setenv(QUARTO_PUBLISH = "none", QUARTO_ENABLED = "0")
library(rsconnect)
rsconnect::deployApp(appDir = "C:/WBG/GitHub/WWBI/ShinyApp/", forceUpdate = TRUE)
rsconnect::appDependencies()
library(shiny)
runGitHub("ShinyApp", "JosefinaSilva96")
library(shiny)
# Source your main app script
source("02-shiny-dashboard.R")
runGitHub("ShinyApp", "JosefinaSilva96")
runGitHub("ShinyApp", "JosefinaSilva96")
runGitHub("ShinyApp", "JosefinaSilva96")
runGitHub("ShinyApp", "JosefinaSilva96")
runGitHub("ShinyApp", "JosefinaSilva96", subdir = "ShinyApp")
library(shiny)
source("02-shiny-dashboard.R")
