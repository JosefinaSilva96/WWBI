# ✅ Generate ggplot for Female Occupational Groups
ggplot_obj <- ggplot(filtered_data, aes(x = country_name, y = value_percentage, fill = indicator_label)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_manual(values = c("Clerks-Public" = "#003366", "Managers-Public" = "#ADD8E6",
"Clerks-Private" = "#006400", "Managers-Private" = "#90EE90")) +
labs(title = "Females by Occupational Group and Sector", x = "Country", y = "Female Share (%)", fill = "Occupation") +
theme_minimal()
# ✅ Save the plot as an image
img_path <- tempfile(fileext = ".png")
ggsave(img_path, plot = ggplot_obj, width = 8, height = 6)
# ✅ Extract summary statistics
highest_public_managers <- filtered_data %>%
filter(indicator_label == "Managers-Public") %>%
filter(value_percentage == max(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
lowest_public_managers <- filtered_data %>%
filter(indicator_label == "Managers-Public") %>%
filter(value_percentage == min(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
highest_private_managers <- filtered_data %>%
filter(indicator_label == "Managers-Private") %>%
filter(value_percentage == max(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
lowest_private_managers <- filtered_data %>%
filter(indicator_label == "Managers-Private") %>%
filter(value_percentage == min(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
highest_public_clerks <- filtered_data %>%
filter(indicator_label == "Clerks-Public") %>%
filter(value_percentage == max(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
lowest_public_clerks <- filtered_data %>%
filter(indicator_label == "Clerks-Public") %>%
filter(value_percentage == min(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
highest_private_clerks <- filtered_data %>%
filter(indicator_label == "Clerks-Private") %>%
filter(value_percentage == max(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
lowest_private_clerks <- filtered_data %>%
filter(indicator_label == "Clerks-Private") %>%
filter(value_percentage == min(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
# ✅ Round averages to 1 decimal place
avg_public_managers <- round(mean(filtered_data$value_percentage[filtered_data$indicator_label == "Managers-Public"], na.rm = TRUE), 1)
avg_private_managers <- round(mean(filtered_data$value_percentage[filtered_data$indicator_label == "Managers-Private"], na.rm = TRUE), 1)
avg_public_clerks <- round(mean(filtered_data$value_percentage[filtered_data$indicator_label == "Clerks-Public"], na.rm = TRUE), 1)
avg_private_clerks <- round(mean(filtered_data$value_percentage[filtered_data$indicator_label == "Clerks-Private"], na.rm = TRUE), 1)
# ✅ Extract employment levels for the first country and comparison
first_country_public_managers <- filtered_data %>%
filter(country_name == first_country, indicator_label == "Managers-Public") %>%
pull(value_percentage) %>%
first() %>%
coalesce(0) %>%
round(1)  # ✅ Round to 1 decimal place
first_country_private_managers <- filtered_data %>%
filter(country_name == first_country, indicator_label == "Managers-Private") %>%
pull(value_percentage) %>%
first() %>%
coalesce(0) %>%
round(1)  # ✅ Round to 1 decimal place
# ✅ Compare first country with others
comparison_public_managers <- if (first_country_public_managers > avg_public_managers) {
paste0("This is higher than the average of ", format(avg_public_managers, nsmall = 1), "% across the other selected countries.")
} else {
paste0("This is lower than the average of ", format(avg_public_managers, nsmall = 1), "% across the other selected countries.")
}
comparison_private_managers <- if (first_country_private_managers > avg_private_managers) {
paste0("This is higher than the average of ", format(avg_private_managers, nsmall = 1), "% across the other selected countries.")
} else {
paste0("This is lower than the average of ", format(avg_private_managers, nsmall = 1), "% across the other selected countries.")
}
interpretation_text <- paste0(
"This graph compares female representation in different occupational groups across selected countries. ",
"On average,", avg_public_managers, "% of public sector managers are female, while in the private sector, female managers account for ", avg_private_managers, "%. ",
"The highest female representation among public sector managers is in ", highest_public_managers, ", whereas the lowest is in ", lowest_public_managers, ". ",
"In the private sector, the highest female manager share is in ", highest_private_managers, "**, while the lowest is in", lowest_private_managers, ".\n\n",
"In", first_country, ", female managers account for ", first_country_public_managers, "% in the public sector. ",
comparison_public_managers, "\n",
"In the private sector, female managers in ", first_country, "represent", first_country_private_managers, "%. ",
comparison_private_managers
)
# ✅ Add Image and Interpretation to the Document
doc <- doc %>%
body_add_img(src = img_path, width = 6, height = 4) %>%
body_add_par("This graph shows the share of females in various occupational groups (Managers/Clerks) in the public and private sectors for the selected countries.", style = "Normal") %>%
body_add_par(interpretation_text, style = "Normal")
return(doc)
}
#Gender Wage premium in the public sector, by industry
output$gender_wage_barplot <- renderPlot({
# Filter data based on user selection
filtered_data <- gender_wage_premiumpublic %>%
filter(country_name %in% input$selected_countries,
indicator_label %in% c("Public Administration",
"Education",
"Health",
"Other"))
# Create ggplot
ggplot(filtered_data, aes(x = country_name, y = value_percentage, fill = indicator_label)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Blues", name = "Indicator") +  # Rename legend title
labs(title = "Gender Wage Premium in Public Sector by Industry",
x = "Country", y = "Wage Premium (%)") +
theme_minimal() +
annotate("text", x = Inf, y = min(filtered_data$value_percentage) - 5,
label = "This indicator represents the gender wage premium across industries in the public sector.",
hjust = 1, size = 4, color = "black", fontface = "italic")
})
output$note_gender_wage_barplot <- renderText({
"Note: This indicator represents the gender wage premium in the public sector across different industries, comparing wages of female employees to male employees."
})
# Download Handler for Word Document
output$downloadGenderWagePremium <- downloadHandler(
filename = function() { paste0("Gender_Wage_Premium_Report_", Sys.Date(), ".docx") },
content = function(file) {
# Create Word Document
doc <- read_docx()
# Title Style
title_style <- fp_text(color = "#722F37", font.size = 16, bold = TRUE)
doc <- doc %>% body_add_fpar(fpar(ftext("Gender Wage Premium in Public Sector by Industry", prop = title_style)))
# Introduction
doc <- doc %>% body_add_par("This report presents an analysis of gender wage premiums in the public sector by industry (Core Public Administration, Education, and Health) across selected countries.", style = "Normal")
# Generate ggplot Object
filtered_data <- gender_wage_premiumpublic %>%
filter(country_name %in% input$selected_countries,
indicator_name %in% c("Gender wage premium in the public sector, by industry: Public Administration (compared to male paid employees)",
"Gender wage premium in the public sector, by industry: Education (compared to male paid employees)",
"Gender wage premium in the public sector, by industry: Health (compared to male paid employees)",
"Other"))
filtered_data$indicator_label <- recode(filtered_data$indicator_name,
"Gender wage premium in the public sector, by industry: Public Administration (compared to male paid employees)" = "Core Public Administration",
"Gender wage premium in the public sector, by industry: Education (compared to male paid employees)" = "Education",
"Gender wage premium in the public sector, by industry: Health (compared to male paid employees)" = "Health")
gender_wage_plot <- ggplot(filtered_data, aes(x = country_name, y = value_percentage, fill = indicator_label)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Blues") +  # Using Blues color palette
labs(title = "Gender Wage Premium in Public Sector by Industry",
x = "Country", y = "Wage Premium (%)") +
theme_minimal()
# Save ggplot as Image
img_path <- tempfile(fileext = ".png")
ggsave(filename = img_path, plot = gender_wage_plot, width = 8, height = 6, dpi = 300)
# Add Image to Word
doc <- doc %>%
body_add_img(src = img_path, width = 6, height = 4) %>%
body_add_par("This graph shows the gender wage premium in the public sector across different industries.", style = "Normal") %>%
body_add_par("Note: This indicator represents the gender wage premium across industries in the public sector.",
style = "Normal")
# Save the Word Document
print(doc, target = file)
}
)
generate_gender_wage_premium_section <- function(doc) {
# Add Section Title
doc <- doc %>% body_add_par("Gender Wage Premium in Public Sector by Industry", style = "heading 1")
# Add Introduction
doc <- doc %>% body_add_par(
"This section presents an analysis of gender wage premiums in the public sector by industry
(Public Administration, Education, and Health) across selected countries.",
style = "Normal"
)
# ✅ Ensure at least one country is selected
if (is.null(input$selected_countries) || length(input$selected_countries) == 0) {
doc <- doc %>% body_add_par("No countries selected for analysis.", style = "Normal")
return(doc)
}
# ✅ Extract the first selected country
first_country <- input$selected_countries[1]
# ✅ Filter data for selected countries
filtered_data <- gender_wage_premiumpublic %>%
filter(country_name %in% input$selected_countries,
indicator_name %in% c("Gender wage premium in the public sector, by industry: Public Administration (compared to male paid employees)",
"Gender wage premium in the public sector, by industry: Education (compared to male paid employees)",
"Gender wage premium in the public sector, by industry: Health (compared to male paid employees)",
"Other"))
# ✅ Handle empty dataset case
if (nrow(filtered_data) == 0) {
doc <- doc %>% body_add_par("No data available for the selected countries.", style = "Normal")
return(doc)
}
# ✅ Rename indicators for readability
filtered_data$indicator_label <- recode(filtered_data$indicator_name,
"Gender wage premium in the public sector, by industry: Public Administration (compared to male paid employees)" = "Public Administration",
"Gender wage premium in the public sector, by industry: Education (compared to male paid employees)" = "Education",
"Gender wage premium in the public sector, by industry: Health (compared to male paid employees)" = "Health")
# ✅ Generate Gender Wage Premium ggplot
gender_wage_plot <- ggplot(filtered_data, aes(x = country_name, y = value_percentage, fill = indicator_label)) +
geom_bar(stat = "identity", position = "dodge") +
scale_fill_brewer(palette = "Blues") +  # Using Blues color palette
labs(title = "Gender Wage Premium in Public Sector by Industry",
x = "Country", y = "Wage Premium (%)", fill = "Industry") +
theme_minimal()
# ✅ Save the plot as an image
img_path <- tempfile(fileext = ".png")
ggsave(filename = img_path, plot = gender_wage_plot, width = 8, height = 6, dpi = 300)
# ✅ Extract summary statistics
highest_admin <- filtered_data %>%
filter(indicator_label == "Public Administration") %>%
filter(value_percentage == max(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
lowest_admin <- filtered_data %>%
filter(indicator_label == "Public Administration") %>%
filter(value_percentage == min(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
highest_education <- filtered_data %>%
filter(indicator_label == "Education") %>%
filter(value_percentage == max(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
lowest_education <- filtered_data %>%
filter(indicator_label == "Education") %>%
filter(value_percentage == min(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
highest_health <- filtered_data %>%
filter(indicator_label == "Health") %>%
filter(value_percentage == max(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
lowest_health <- filtered_data %>%
filter(indicator_label == "Health") %>%
filter(value_percentage == min(value_percentage, na.rm = TRUE)) %>%
pull(country_name) %>%
first()
# ✅ Round all extracted values to integers
avg_admin <- round(mean(filtered_data$value_percentage[filtered_data$indicator_label == "Public Administration"], na.rm = TRUE), 0)
avg_education <- round(mean(filtered_data$value_percentage[filtered_data$indicator_label == "Education"], na.rm = TRUE), 0)
avg_health <- round(mean(filtered_data$value_percentage[filtered_data$indicator_label == "Health"], na.rm = TRUE), 0)
first_country_admin <- filtered_data %>%
filter(country_name == first_country, indicator_label == "Public Administration") %>%
pull(value_percentage) %>%
first() %>%
coalesce(0) %>%
round(0)
first_country_education <- filtered_data %>%
filter(country_name == first_country, indicator_label == "Education") %>%
pull(value_percentage) %>%
first() %>%
coalesce(0) %>%
round(0)
# ✅ Compare first country with others using rounded numbers
comparison_admin <- if (first_country_admin > avg_admin) {
paste0("This is higher than the average of ", avg_admin, "% across the other selected countries.")
} else {
paste0("This is lower than the average of ", avg_admin, "% across the other selected countries.")
}
comparison_education <- if (first_country_education > avg_education) {
paste0("This is higher than the average of ", avg_education, "% across the other selected countries.")
} else {
paste0("This is lower than the average of ", avg_education, "% across the other selected countries.")
}
# ✅ Ensure all numbers in interpretation_text are rounded integers
interpretation_text <- paste0(
"This graph compares the gender wage premium in the public sector across different industries. ",
"On average, the wage premium in Public Administration is ", avg_admin, "%, in Education it is ", avg_education, "%, ",
"and in Health it is ", avg_health, "%.\n\n",
"The highest wage premium in Public Administration is in ", highest_admin, ", while the lowest is in ", lowest_admin, ". ",
"In Education, the highest wage premium is observed in ", highest_education, ", whereas the lowest is in ", lowest_education, ". ",
"For Health, the highest gender wage premium is in ", highest_health, ", while the lowest is in ", lowest_health, ".\n\n",
"In ", first_country, ", the wage premium in Public Administration is ", first_country_admin, "%. ",
comparison_admin, "\n",
"In Education, the wage premium in ", first_country, " is ", first_country_education, "%. ",
comparison_education
)
# ✅ Add Image and Interpretation to the Document
doc <- doc %>%
body_add_img(src = img_path, width = 6, height = 4) %>%
body_add_par("This graph shows the gender wage premium in the public sector across different industries.", style = "Normal") %>%
body_add_par(interpretation_text, style = "Normal")
return(doc)
}
generate_intro_section <- function(doc) {
# Initialize Word document
doc <- read_docx()
# Get the first selected country
first_country <- if (!is.null(input$countries) && length(input$countries) > 0) {
input$countries[1]
} else {
"Unknown Country"
}
# Ensure first_region is defined properly
first_region <- if (!is.null(input$region) && input$region != "") {
input$region
} else {
"the selected region"
}
# Add Title to Document
title_text <- paste0(first_country, "\nWage Bill and Public Employment Analysis")
# Format title
title_style <- fp_text(color = "#722F37", font.size = 20, bold = TRUE)
subtitle_style <- fp_text(color = "black", font.size = 16, bold = TRUE)
doc <- doc %>%
body_add_fpar(fpar(ftext(first_country, prop = title_style))) %>%
body_add_fpar(fpar(ftext("Wage Bill and Public Employment Analysis", prop = subtitle_style)))
# Extract the World Bank Region for the Selected Country
first_region <- countrycode(first_country, origin = "country.name", destination = "region")
# Handle missing values in case countrycode() fails
if (is.na(first_region)) {
first_region <- "its respective region"  # Default fallback if region is not found
}
# Construct Introduction Text Dynamically
intro_text <- paste0(
"This note presents evidence on public sector employment and compensation practices in ", first_country,
" using the Worldwide Bureaucracy Indicators (WWBI). The primary data source is the Labor Force Survey , conducted by the National Statistics Office. ",
"For international comparisons, peer countries from ", first_region, " are included.",
"\n\n",  # Add line break for a new paragraph
"The public sector is typically a major source of employment in most countries. ",
"The provision of basic services such as education, health, citizen security, and justice, among others, ",
"makes it a central actor in labor markets, with significant impacts on the aggregate results of employment, ",
"wages, informality, and other economic variables. Moreover, public employment is an indicator of the state’s ",
"participation in the entire economy, which has implications for macroeconomic balances, allocation efficiency, ",
"and income distribution. Thus, this analysis comprehensively documents the size of public employment, ",
"its changes over time, and the characteristics of its workforce.",
"\n\n",
"This work documents and analyzes the size, composition, and changes in the levels of employment and wages of ",
first_country, "’s public employees compared to the private sector and how these metrics compare to regional peers."
)
# ✅ Add introduction text
doc <- doc %>% body_add_par(intro_text, style = "Normal")
# Define a bold, blue style for section headings
section_style <- fp_text(color = "#003366", font.size = 14, bold = TRUE)
# ✅ Add section title using styled text
doc <- doc %>% body_add_fpar(fpar(ftext("The Macro Fundamentals of the Public Sector", prop = section_style)))
return(doc)
}
generate_conclusion_section <- function(doc) {
# Add Section Title
doc <- doc %>% body_add_par("Conclusion", style = "heading 1")
# Add Conclusion Text
doc <- doc %>% body_add_par(
"This report provides a comprehensive analysis of wage bill trends, gender employment representation, and workforce participation in the public sector.
The findings highlight key trends and disparities across different sectors and countries.",
style = "Normal"
)
return(doc)
}
#Download selected graphs
output$downloadSelectedGraphsDoc <- downloadHandler(
filename = function() {
paste0("Wage_bill_and_public_employment_analysis_Selected_Report_", Sys.Date(), ".docx")
},
content = function(file) {
# Get the selected countries dynamically
selected_countries <- input$countries_first
# Initialize Word document
doc <- read_docx()
# Add Report Title
title_style <- fp_text(color = "#722F37", font.size = 20, bold = TRUE)
doc <- doc %>% body_add_fpar(fpar(ftext("Wage_bill_and_public_employment_analysis_Selected_Report_", prop = title_style)))
doc <- generate_intro_section(doc)  # Add the Intro First
#Define Section Style
section_style <- fp_text(color = "#003366", font.size = 14, bold = TRUE)
# ✅ Dynamically include only selected sections
selected_sections <- input$selected_graphs
if ("wagebill" %in% selected_sections) {
doc <- generate_wage_bill_analysis_section(doc)
}
if ("wagebill_gdp" %in% selected_sections) {
doc <- doc <- generate_gdp_analysis_section(doc, selected_countries)
}
if ("tertiaryeducation" %in% selected_sections) {
doc <- generate_tertiary_education_section(doc)
}
if ("genderwagepremium" %in% selected_sections) {
doc <- generate_wage_premium_gender_section(doc)
}
if ("wagepremiumeducation" %in% selected_sections) {
doc <- generate_wage_premium_education_section(doc)
}
if ("public_employment" %in% selected_sections) {
doc <-generate_public_sector_employment_section(doc)
}
if ("wagepremiumgender" %in% selected_sections) {
doc <-generate_wage_premium_gender_report_section(doc)
}
if ("public_workforce" %in% selected_sections) {
doc <- generate_public_sector_workforce_section(doc)
}
if ("gender_workforce" %in% selected_sections) {
doc <- generate_gender_workforce_section(doc)
}
if ("femaleocuupation" %in% selected_sections) {
doc <- generate_females_occupation_groups_section(doc)
}
if ("wagepremium" %in% selected_sections) {
doc <- generate_wage_premium_report_section(doc)
}
if ("gender_wage_premium" %in% selected_sections) {
doc <- generate_gender_wage_premium_section(doc)
}
if ("wagepremium_gender" %in% selected_sections) {
doc <- generate_gender_wage_premium_section(doc)
}
# ✅ Ensure at least one section is included
if (length(selected_sections) == 0) {
doc <- doc %>% body_add_par("No sections selected for download.", style = "Normal")
}
# ✅ Save the customized report
print(doc, target = file)
}
)
#Download one single report
output$downloadAllGraphsDoc <- downloadHandler(
filename = function() {
paste0("Wage_bill_and_public_employment_analysis_", Sys.Date(), ".docx")
},
content = function(file) {
# Get the selected countries dynamically
selected_countries <- input$countries_first
# Initialize Word document
doc <- read_docx()
# Add Report Title
title_style <- fp_text(color = "#722F37", font.size = 20, bold = TRUE)
doc <- doc %>% body_add_fpar(fpar(ftext("Wage bill and public employment analysis", prop = title_style)))
doc <- generate_intro_section(doc)  # Add the Intro First
#Define Section Style
section_style <- fp_text(color = "#003366", font.size = 14, bold = TRUE)
# Add Sections from Each Tab
doc <- generate_wage_bill_analysis_section(doc) #  Wage Bill Analysis
doc <- generate_gdp_analysis_section(doc, selected_countries)
doc <- generate_tertiary_education_section(doc) # Tertiary Education Analysis
doc <- generate_wage_premium_gender_section(doc) #Wage Premium Gender Analysis
doc <- generate_wage_premium_education_section(doc) #Wage Premium by Education
doc <- doc %>% body_add_fpar(fpar(ftext("The size of the public sector", prop = section_style)))
doc <- generate_public_sector_employment_section(doc)  #Public Sector Employment
doc <- generate_wage_premium_gender_report_section(doc) #Wage Premium Gender Report
doc <- doc %>% body_add_fpar(fpar(ftext("Characteristics of the public sector workforce", prop = section_style)))
doc <- generate_gender_workforce_section(doc) #Gender Workforce Analysis
doc <- generate_females_occupation_groups_section(doc) #Females by Occupational Groups
doc <- doc %>%
body_add_fpar(fpar(ftext("Competitiveness of Public Sector Wages", prop = section_style))) %>%
body_add_par(
"Public sector compensation should theoretically be designed with an awareness of its influence on the broader labor market. According to the theory of “compensating wage differentials,” a job should pay more (or less) depending on its non-wage characteristics that are undesirable (or desirable). Therefore, the optimal design of public sector wages should account for the greater presence of both financial and non-financial benefits in public service. Ideally, public sector wages should include a slight penalty in base wages due to the higher non-monetary benefits such as job security, pension plans, and the opportunity to serve the public. This structure means that, despite lower monetary compensation, the total de facto compensation (including these non-monetary benefits) that individuals receive would be roughly equivalent to that in the private sector. Public sector wages should also track private sector wages, maintaining a small penalty while ensuring that wage rigidities in the public sector do not create a significant gap between the two sectors. This alignment would ensure that public sector compensation remains competitive without being distortionary, preventing shortages of skills or qualified applicants in either sector.",
style = "Normal"
)
doc <- generate_wage_premium_report_section(doc) #Public Sector Wage Premium Report
doc <- generate_gender_wage_premium_section(doc)    # Wage Premium by industry Analysis
# ✅ Add Conclusion Section at the End
doc <- generate_conclusion_section(doc)
# Save the Final Report
print(doc, target = file)
}
)
output$worldMap <- renderLeaflet({
data_values <- filtered_data_for_map()
color_pal <- colorNumeric("Greens", domain = c(min(data_values$value_percentage, na.rm = TRUE),
max(data_values$value_percentage, na.rm = TRUE)))
leaflet(world_spdf) %>% addTiles() %>% setView(lng = 0, lat = 20, zoom = 2) %>%
addLegend(position = "bottomright", pal = color_pal,
values = c(min(data_values$value_percentage, na.rm = TRUE),
max(data_values$value_percentage, na.rm = TRUE)),
title = "Indicator Value", opacity = 1)
})
filtered_data_for_map <- reactive({
req(input$indicatorSelect, input$yearSelect)
data_wwbi %>% filter(indicator_name == input$indicatorSelect,
!is.na(.data[[paste0("year_", input$yearSelect)]])) %>%
transmute(country_name, indicator_name, value_percentage = .data[[paste0("year_", input$yearSelect)]])
})
observe({
req(input$indicatorSelect, input$yearSelect)
reported_countries <- filtered_data_for_map()
if(is.null(reported_countries) || nrow(reported_countries) == 0) return()
world_data_merged <- world_spdf %>% left_join(reported_countries, by = "country_name")
color_pal <- colorNumeric("Greens", domain = c(min(reported_countries$value_percentage, na.rm = TRUE),
max(reported_countries$value_percentage, na.rm = TRUE)))
leafletProxy("worldMap") %>% clearShapes() %>%
addPolygons(data = world_data_merged,
fillColor = ~ifelse(is.na(value_percentage), "#808080", color_pal(value_percentage)),
fillOpacity = 0.7,
color = "white",
weight = 1,
highlightOptions = highlightOptions(color = "#FFD700", weight = 2, fillOpacity = 0.9),
label = ~paste0("<strong>Country:</strong> ", country_name, "<br>",
ifelse(!is.na(value_percentage), paste0("<strong>Value:</strong> ", round(value_percentage, 2)), "<strong>No Data</strong>")),
popup = ~paste("Country:", country_name, "<br>Indicator:", indicator_name,
ifelse(!is.na(value_percentage), paste("<br>Value:", round(value_percentage, 2)), "<br>No Data Available"))
)
output$countryCount <- renderText({
paste("Total Countries with Data:", nrow(reported_countries))
})
})
# Change infoBox colors to "purple" to match the quartz theme
output$numberIndicatorsBox <- renderInfoBox({
infoBox("Indicators", 302, icon = icon("list"), color = "purple")
})
output$numberCountriesBox <- renderInfoBox({
infoBox("Economies", length(unique(data_wwbi$country_name)), icon = icon("globe"), color = "purple")
})
output$temporalCoverageAnnualBox <- renderInfoBox({
infoBox("Temporal Coverage (Annual)", "2000-2022", icon = icon("calendar"), color = "purple")
})
output$temporalCoverageYearsBox <- renderInfoBox({
infoBox("Temporal Coverage (Years)", "22", icon = icon("calendar"), color = "purple")
})
output$lastUpdatedBox <- renderInfoBox({
infoBox("Last Updated", "2022", icon = icon("clock"), color = "purple")
})
}
shinyApp(ui = ui, server = server)
data_path <- "C:/Users/wb631166/OneDrive - WBG/Desktop/Bureaucracy Lab/WWBI"
